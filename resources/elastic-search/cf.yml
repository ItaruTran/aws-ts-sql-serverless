Mappings:
  LayerResourceMapping:
    ap-northeast-1:
      layerRegion: arn:aws:lambda:ap-northeast-1:249908578461:layer:AWSLambda-Python-AWS-SDK:1
    us-east-1:
      layerRegion: arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python-AWS-SDK:1
    ap-southeast-1:
      layerRegion: arn:aws:lambda:ap-southeast-1:468957933125:layer:AWSLambda-Python-AWS-SDK:1
    eu-west-1:
      layerRegion: arn:aws:lambda:eu-west-1:399891621064:layer:AWSLambda-Python-AWS-SDK:1
    us-west-1:
      layerRegion: arn:aws:lambda:us-west-1:325793726646:layer:AWSLambda-Python-AWS-SDK:1
    ap-east-1:
      layerRegion: arn:aws:lambda:ap-east-1:118857876118:layer:AWSLambda-Python-AWS-SDK:1
    ap-northeast-2:
      layerRegion: arn:aws:lambda:ap-northeast-2:296580773974:layer:AWSLambda-Python-AWS-SDK:1
    ap-northeast-3:
      layerRegion: arn:aws:lambda:ap-northeast-3:961244031340:layer:AWSLambda-Python-AWS-SDK:1
    ap-south-1:
      layerRegion: arn:aws:lambda:ap-south-1:631267018583:layer:AWSLambda-Python-AWS-SDK:1
    ap-southeast-2:
      layerRegion: arn:aws:lambda:ap-southeast-2:817496625479:layer:AWSLambda-Python-AWS-SDK:1
    ca-central-1:
      layerRegion: arn:aws:lambda:ca-central-1:778625758767:layer:AWSLambda-Python-AWS-SDK:1
    eu-central-1:
      layerRegion: arn:aws:lambda:eu-central-1:292169987271:layer:AWSLambda-Python-AWS-SDK:1
    eu-north-1:
      layerRegion: arn:aws:lambda:eu-north-1:642425348156:layer:AWSLambda-Python-AWS-SDK:1
    eu-west-2:
      layerRegion: arn:aws:lambda:eu-west-2:142628438157:layer:AWSLambda-Python-AWS-SDK:1
    eu-west-3:
      layerRegion: arn:aws:lambda:eu-west-3:959311844005:layer:AWSLambda-Python-AWS-SDK:1
    sa-east-1:
      layerRegion: arn:aws:lambda:sa-east-1:640010853179:layer:AWSLambda-Python-AWS-SDK:1
    us-east-2:
      layerRegion: arn:aws:lambda:us-east-2:259788987135:layer:AWSLambda-Python-AWS-SDK:1
    us-west-2:
      layerRegion: arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python-AWS-SDK:1
    cn-north-1:
      layerRegion: arn:aws-cn:lambda:cn-north-1:683298794825:layer:AWSLambda-Python-AWS-SDK:1
    cn-northwest-1:
      layerRegion: arn:aws-cn:lambda:cn-northwest-1:382066503313:layer:AWSLambda-Python-AWS-SDK:1
    us-gov-west-1:
      layerRegion: arn:aws-us-gov:lambda:us-gov-west-1:556739011827:layer:AWSLambda-Python-AWS-SDK:1
    us-gov-east-1:
      layerRegion: arn:aws-us-gov:lambda:us-gov-east-1:138526772879:layer:AWSLambda-Python-AWS-SDK:1
Conditions:
  ShouldCreateSearchService: !Equals
    - "${self:custom.search.ShouldCreateSearchService}"
    - ALLOW

Resources:
  ElasticSearchInstance:
    Type: AWS::Elasticsearch::Domain
    Condition: ShouldCreateSearchService
    Properties:
      EBSOptions:
        EBSEnabled: true
        VolumeType: gp2
        VolumeSize: 10
      ElasticsearchClusterConfig:
        InstanceType: t2.small.elasticsearch
        InstanceCount: 1
        DedicatedMasterEnabled: false
        ZoneAwarenessEnabled: false
      ElasticsearchVersion: 7.4
      DomainName: "${self:custom.prefix}-search-${self:provider.stage}"
  AppSyncESServiceRole:
    Type: AWS::IAM::Role
    Condition: ShouldCreateSearchService
    DependsOn:
      - ElasticSearchInstance
    Properties:
      RoleName: ElasticSearch-${self:custom.prefix}-${self:provider.stage}-Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ElasticSearch-${self:custom.prefix}-${self:provider.stage}-Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - es:*
                Resource: !Join
                  - "/"
                  - - !GetAtt
                      - ElasticSearchInstance
                      - DomainArn
                    - "*"
  # Override
  DdbToEsFnLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: ShouldCreateSearchService
  DdbToEsFnIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Condition: ShouldCreateSearchService
Outputs:
  AppSyncESServiceRoleArn:
    Description: The Serive role for lamda access to Elastic Search Instance
    Condition: ShouldCreateSearchService
    Value:
      Fn::GetAtt:
        - AppSyncESServiceRole
        - Arn
    Export:
      Name: "${self:custom.prefix}-${self:provider.stage}-AppSyncESServiceRoleArn"
  ElasticSearchEndpoint:
    Description: The Elasticserach Domain endpoint
    Condition: ShouldCreateSearchService
    Value:
      Fn::GetAtt:
        - ElasticSearchInstance
        - DomainEndpoint
    Export:
      Name: "${self:custom.prefix}-${self:provider.stage}-ElasticSearchEndpoint"
  ElasticStreamFnArn:
    Condition: ShouldCreateSearchService
    Description: The Elasticserach streaming Function Arn
    Value:
      Fn::GetAtt:
        - DdbToEsFnLambdaFunction
        - Arn
    Export:
      Name: "${self:custom.prefix}-${self:provider.stage}-ElasticStreamFnArn"
